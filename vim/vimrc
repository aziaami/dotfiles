" list of online vimrc used :
" * github.com/victormours/dotfiles

" automatic reloading of .vimrc 
autocmd! bufwritepost .vimrc source %

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
filetype off        " required

" The mapleader has to be set before vundle starts loading plugins.
let mapleader = "\<Space>"

""""""""""
""" VUNDLE
""""""""""
"
" set runtime path to include Vundle and initialise
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/some/path/here')

" let Vundle manage itself (required)
Plugin 'gmarik/Vundle.vim'

" Plugins here ... 
Plugin 'tomasr/molokai'                   " color scheme
Plugin 'Valloric/YouCompleteMe'           " code completion
Plugin 'scrooloose/nerdtree'              " tree explorer
Plugin 'Xuyuanp/nerdtree-git-plugin'      " git status in nerdtree
Plugin 'octol/vim-cpp-enhanced-highlight' " advanced C++ syntax highlighting
Plugin 'ctrlpvim/ctrlp.vim'               " fuzzy finder
Plugin 'airblade/vim-gitgutter'           " git diff open files
Plugin 'godlygeek/tabular'                " most come before vim-markdown
Plugin 'plasticboy/vim-markdown'          " .md syntax highlighting, matching and mappings
Plugin 'JamshedVesuna/vim-markdown-preview' " preview markdown in the browser

" All of your Plugins must be added before this line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
" filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line ... 

" ================ General Config ===================
"
" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

syntax enable
syntax on

set relativenumber  " show relative line numbers
set number			    " show absolute line number of current line
set showmatch		    " show matching brackets [] {} ()
set history=1000    " store lots of :cmdline history
set showmode        " show current mode down the bottom
set autoread		    " reload files changed outside of vim
set scrolloff=3     " Keep 3 lines below and above the cursor
set mouse=a         " enable use of mouse

set clipboard=unnamed	  " allow paste from mac clipboard

" switch panes 
nnoremap <leader>w <C-w>w

" list buffers
nnoremap <leader>ls :ls<CR>
" close the current buffer
nnoremap <leader>bd :bn\|bd #<CR>
" scrol next/previous buffers
nnoremap <leader>bn :bn<CR>
nnoremap <leader>bp :bp<CR>

" jump to end of line with ctrl-e in insert mode
inoremap <C-e> <C-o>$
" jump to start of line with ctrl-a in insert mode
inoremap <C-a> <C-o>0

" ================ Turn Off Swap Files ==============
"
set noswapfile
set nobackup
set nowb

" OR store temporary files in a central location
" as suggested here :
"set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
"set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" ================ Search ===========================
"
set incsearch		  " incremental search mode
set hlsearch		  " highlight search things
set ignorecase		" ignorecase when searching
set smartcase		  " only works when ignorecase on

" quickly clear search highlights 
nnoremap <silent> <leader>n :nohlsearch<CR>

" ================ Indentation ======================
set autoindent		  " align new line indent with previous line
set expandtab       " tab is replaced with spaces
set tabstop=2		    " number of spaces <TAB> counts for
set shiftwidth=2    " operation >> indents 2 spaces; << unindents 2 spaces

""""""""""""""""""""""""""""""""""""
" VIM PLUGIN CONFIG
""""""""""""""""""""""""""""""""""""
"
"" ========== UI colourscheme ======
set background=dark
colorscheme molokai

" =========== NERDTree =============
" https://medium.com/@victormours/a-better-nerdtree-setup-3d3921abc0b9#.hulkzoakb
"
" Open NERDTree by deafult when we open vim
"autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 | NERDTree | endif

" Easily toggle NERDTree
nnoremap <leader>f :NERDTreeToggle<CR>

" Easily open NerdTree on the file youâ€™re editing
nnoremap <silent> <leader>v :NERDTreeFind<CR>

" =========== GitGutter ============
" Activate by defualt 
let g:gitgutter_enabled=1

" =========== CtrlP ================
" always open files in new buffers.
let g:ctrlp_switch_buffer = 1
" if we change the working directory CtrlP should respect that change.
let g:ctrlp_working_path_mode = 1

" =========== Markdown =============
" disable the folding configuration
let g:vim_markdown_folding_disabled = 1
" prevent foldtext from being set
let g:vim_markdown_override_foldtext = 0

" use grip (https://github.com/joeyespo/grip) for GitHub flavoured Markdown
" (https://help.github.com/categories/writing-on-github/) 
" Note. grip must be installed (eg. on Mac use 'brew install grip')
let vim_markdown_preview_github=1
" remap vim-markdown-preview key bindins
let vim_markdown_preview_hotkey='<leader>m'
" use Google Chrome to preview markdown
let vim_markdown_preview_browser='Google Chrome'
" show images in preview
let vim_markdown_preview_toggle=1
" delete the generated html file once in the browser
let vim_markdown_preview_temp_file=1

" =========== clang-format =========
" If 'clang-format' is not in PATH, specify its path
"let g:clang_format_binary = '<absolute-path-to-clang-format>'

" Use google c++ style: https://google.github.io/styleguide/cppguide.html
" Default is to use the .clang-format file in the tree otherwise use fallback_style
" let g:clang_format_style = 'file'
" let g:clang_format_style = '{ BasedOnStyle: llvm, IndentWidth: 4 }'
let g:clang_format_fallback_style = 'Google'

" map key-shortcut for easy use
nnoremap <leader>i :pyf ~/.vim/clang_format.py<CR>
"inoremap <C-I> <ESC>:pyf  ~/.vim/clang_format.py<CR>i
" =========== YouCompleteMe ========
" See GitHub for documentation: https://github.com/Valloric/YouCompleteMe 
" http://www.alexeyshmalko.com/2014/youcompleteme-ultimate-autocomplete-plugin-for-vim/
"
" For default options see here: https://github.com/Valloric/YouCompleteMe#options
"
" extras auto-completion file for C family - (we get these as minimum)
" taken from https://github.com/rasendubi/dotfiles/blob/master/.vim/.ycm_extra_conf.py
" more complete version: https://github.com/Valloric/ycmd/blob/master/cpp/ycm/.ycm_extra_conf.py
let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"

" use first python executable found in PATH. Useful in a virtual environment - just
" start vim in that directory to provide completions for packages in the virtual env.
" https://github.com/Valloric/YouCompleteMe/blob/master/README.md#python-semantic-completion
let g:ycm_python_binary_path = 'python'

" automatically close the preview window.
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1

" add key mappings  
" perform the 'most sensible' GoTo operation it can
nnoremap <leader>jd :YcmCompleter GoTo<CR>
" =================================
" /END
